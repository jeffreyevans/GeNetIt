% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/predict.gravity.R
\name{predict.gravity}
\alias{predict.gravity}
\title{Predict gravity model}
\usage{
\method{predict}{gravity}(object, newdata, groups = NULL, ...)
}
\arguments{
\item{object}{Object of class gravity}

\item{newdata}{New data used for obtaining the predictions, can
be a data.frame or nffGroupedData}

\item{groups}{Grouping factor acting as random effect. If used,
must match levels used in model, otherwise leave it
null and do not convert to groupedData}

\item{...}{Arguments passed to predict.lme or predict.lm}
}
\value{
Model predictions
}
\description{
predict method for class "gravity"
}
\examples{
library(nlme)
data(ralu.model)

back.transform <- function(y) exp(y + 0.5 * stats::var(y))
rmse = function(p, o){ sqrt(mean((p - o)^2)) } 

x = c("DEPTH_F", "HLI_F", "CTI_F", "cti", "ffp")
 
sidx <- sample(1:nrow(ralu.model), 100) 
  train <- ralu.model[sidx,]
  test <- ralu.model[-sidx,]
 
 # Specify constrained gravity model	
 ( gm <- gravity(y = "DPS", x = x, d = "DISTANCE", group = "FROM_SITE", 
                 data = train, ln = FALSE) )
  
( p <- predict(gm, test[,c(x, "DISTANCE")]) )
  rmse(back.transform(p), back.transform(ralu.model[,"DPS"][-sidx]))

# Using grouped data
test <- nlme::groupedData(stats::as.formula(paste(paste("DPS", 1, sep = " ~ "), 
          "FROM_SITE", sep = " | ")), 
		  data = test[,c("DPS", "FROM_SITE", x, "DISTANCE")])

( p <- predict(gm, test, groups = "FROM_SITE") )
  rmse(back.transform(p), back.transform(ralu.model[,"DPS"][-sidx]))

# Specify unconstrained gravity model (generally, not recommended)	
( gm <- gravity(y = "DPS", x = x, d = "DISTANCE", group = "FROM_SITE", 
                data = train, ln = FALSE, constrained=TRUE) )

( p <- predict(gm, test[,c(x, "DISTANCE")]) )
  rmse(back.transform(p), back.transform(ralu.model[,"DPS"][-sidx])) 

}
